Fetcher Steps:
1. Look up the old fetcher in the existing harvester codebase.
    https://github.com/ucldc/harvester/blob/master/harvester/fetcher/oai_fetcher.py#L69

2. Determine what's in the collection registry for "harvest endpoint" and "harvest extra data" for collections that use this fetcher.

3. Isolate out any fetcher-level mapping that may exist in the old fetcher - track it for the mapper migration. Creating a link like the following: https://github.com/ucldc/harvester/blob/master/harvester/fetcher/oac_fetcher.py#L69-L133 and attaching it to a GitHub issue is a great way to track this.


4. Determine how pagination works for this fetcher from looking at the old fetcher and curling harvest endpoint/harvest extra data.
5. Determine a data model for the harvest_data dictionary for this source type.
6. Write build_fetch_request method.
7. Determine what the response looks like and how to isolate out each record as a dictionary. Implement in get_records method.
8. Write increment method.
9. Figure out what sort of ID generator collections using this fetcher use, add to the get_records method so that calisphere-id is assigned to objects right away.